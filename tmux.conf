# ======== Settings ======== #
#
# Address vim mode switching delay (http://superuser.com/a/252717/65504)
set -s escape-time 0

# Increase scrollback buffer size from 2000 to 50000 lines
set -g history-limit 50000

# Increase tmux messages display duration from 750ms to 4s
set -g display-time 4000

# Refresh 'status-left' and 'status-right' more often, from every 15s to 5s
set -g status-interval 5

# Upgrade $TERM
set -g default-terminal "screen-256color"

# Emacs key bindings in tmux command prompt (prefix + :) are better than
# vi keys, even for vim users
set -g status-keys emacs

# Focus events enabled for terminals that support them
set -g focus-events on

# Super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on

set -g mouse on

set-option -g status-position top
set -g base-index 1

# This enables vim nagivation
set -g mode-keys vi

set -g renumber-windows on

# ======== Keymaps ======== #

unbind C-b
set-option -g prefix C-a
bind C-a send-prefix
bind a last-window

unbind r
bind r source-file "~/.config/tmux/tmux.conf"

# Easier and faster switching between next/prev window
bind C-p previous-window
bind C-n next-window

# Create vertical split
unbind '/'
bind '/' split-window -h -c "#{pane_current_path}"

# Create horizontal split
unbind '-'
bind - split-window -v -c "#{pane_current_path}"

bind c new-window -c "#{pane_current_path}"

# resize panes with vim motions
bind -r j resize-pane -D 5
bind -r k resize-pane -U 5
bind -r l resize-pane -R 5
bind -r h resize-pane -L 5

# maximize pane
unbind f
bind -r f resize-pane -Z

# Change the keybinding to enter copy mode from 'prefix + [' to 'prefix + v'
unbind v
bind v copy-mode

bind-key -T copy-mode-vi 'Escape' send -X cancel
bind -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel
# bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
# bind P paste-buffer

# Alternate session
# Switch between the last 2 tmux sessions, similar to 'cd -' in the terminal
# I use this in combination with the `choose-tree` to sort sessions by time
# Otherwise, by default, sessions are sorted by name, and that makes no sense
# -l stands for `last session`, see `man tmux`
unbind Space
bind-key Space switch-client -l

# When pressing prefix+s to list sessions, I want them sorted by time
# That way my latest used sessions show at the top of the list
# -s starts with sessions collapsed (doesn't show windows)
# -Z zooms the pane (don't uderstand what this does)
# -O specifies the initial sort field: one of ‘index’, ‘name’, or ‘time’ (activity).
# https://unix.stackexchange.com/questions/608268/how-can-i-force-tmux-to-sort-my-sessions-alphabetically
bind s choose-tree -Zs -O time -F "#{session_windows}"

# Search sessions using an fzf menu
# Found this gem down here:
# https://github.com/majjoha/dotfiles/blob/cd6f966d359e16b3a7c149f96d4edb8a83e769db/.config/tmux/tmux.conf#L41
bind S display-popup -E -w 75% -h 75% "\
  tmux list-sessions -F '#{?session_attached,,#{session_name}}' |\
  sed '/^$/d' |\
  fzf --reverse --header jump-to-session --preview 'tmux capture-pane -pt {}'  |\
  xargs tmux switch-client -t"

# fzf menu to kill sessions
# Credit: video below by Waylon Walker
# https://www.youtube.com/watch?v=QWPyYx54JbE
bind D display-popup -E "\
    tmux list-sessions -F '#{?session_attached,,#{session_name}}' |\
    fzf --reverse -m --header=kill-session |\
    xargs -I {} tmux kill-session -t {}"

# Bind 'd' to perform the 'x' action when in choose-tree mode
# In other words, this allows you to close sessions with "d" when in the session
# navigator "choose-tree" that comes up with prefix+s
bind -n d if -F '#{==:#{pane_mode},tree-mode}' 'send x' 'send d'

# Use 'D' instead of 'X' to delete all tagged panes
bind -n D if -F '#{==:#{pane_mode},tree-mode}' 'send X' 'send D'

# ======== Smart pane switching with awareness of Vim splits. ======== #
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l


# ======== Theme settings ======== #

set -g @thm_surface "#1f1d2e"
set -g @thm_base "#191724"
set -g @thm_overlay "#26233a"
set -g @thm_muted "#6e6a86"
set -g @thm_subtle "#908caa"
set -g @thm_text "#e0def4"
set -g @thm_love "#eb6f92"
set -g @thm_gold "#f6c177"
set -g @thm_rose "#ebbcba"
set -g @thm_pine "#31748f"
set -g @thm_foam "#9ccfd8"
set -g @thm_iris "#c4a7e7"
set -g @thm_hl_low "#21202e"
set -g @thm_hl_med "#403d52"
set -g @thm_hl_high "#524f67"

set-option -gq "status" "on";
set-option -gq status-style "fg=#{@thm_pine},bg=#{@thm_base}";

set-option -gq status-left-length "200";
set-option -gq status-right-length "200";

set-option -gq message-style "fg=#{@thm_muted},bg=#{@thm_base}";
set-option -gq message-command-style "fg=#{@thm_base},bg=#{@thm_gold}";

# Pane styling
set-option -gq pane-border-style "fg=#{@thm_hl_high}";
set-option -gq pane-active-border-style "fg=#{@thm_gold}";
set-option -gq display-panes-active-colour "#e0def4";
set-option -gq display-panes-colour "#f6c177";

# Windows
set-window-option -gq window-status-style "fg=#{@thm_iris},bg=#{@thm_base}";
set-window-option -gq window-status-activity-style "fg=#{@thm_base},bg=#{@thm_rose}";
set-window-option -gq window-status-current-style "fg=#{@thm_gold},bg=#{@thm_base}";

set-window-option -gq clock-mode-colour "#eb6f92"
set-window-option -gq mode-style "fg=#{@thm_gold}"

set -g window-status-format "#I:#W"
set -g window-status-current-format "#I:#W"

# set -g window-status-last-style "fg=#{@thm_foam}"

set-option -gq status-right "";

set -g status-left "#[fg=#{?client_prefix,#eb6f92,#31748f}][#S] "
